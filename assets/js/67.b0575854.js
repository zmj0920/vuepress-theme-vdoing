(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{666:function(s,a,n){"use strict";n.r(a);var e=n(40),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"入门flutter-dart基础"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#入门flutter-dart基础"}},[s._v("#")]),s._v(" 入门Flutter_Dart基础")]),s._v(" "),n("h1",{attrs:{id:"dart-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dart-介绍"}},[s._v("#")]),s._v(" Dart 介绍")]),s._v(" "),n("ul",[n("li",[s._v("Dart 是由谷歌开发的计算机编程语言,它可以被用于 web、服务器、移动应用 和物联网等领域的开发。")]),s._v(" "),n("li",[s._v("Dart 诞生于 2011 年，号称要取代 JavaScript")]),s._v(" "),n("li",[s._v("要学 Flutter 的话我们必须首先得会 Dart。")]),s._v(" "),n("li",[s._v("官网：https://dart.dev/")]),s._v(" "),n("li",[s._v("flutterUI  https://flutter-widget.live/zh_CN/basics/introduction")]),s._v(" "),n("li",[s._v("https://javiercbk.github.io/json_to_dart/")]),s._v(" "),n("li",[s._v("https://www.dartcn.com/guides/language/language-tour#final-%E5%92%8C-const")])]),s._v(" "),n("h2",{attrs:{id:"dart-环境搭建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dart-环境搭建"}},[s._v("#")]),s._v(" Dart 环境搭建")]),s._v(" "),n("p",[s._v("要在我们本地开发 Dart 程序的话首先需要安装 Dart Sdk")]),s._v(" "),n("p",[s._v("官方文档：https://dart.dev/get-dart")]),s._v(" "),n("p",[s._v("windows(推荐):")]),s._v(" "),n("p",[s._v("http://www.gekorm.com/dart-windows/")]),s._v(" "),n("p",[s._v("mac：")]),s._v(" "),n("p",[s._v("如果 mac 电脑没有安装 brew 这个工具首先第一步需要安装它： https://brew.sh/")]),s._v(" "),n("p",[s._v("brew tap dart-lang/dart")]),s._v(" "),n("p",[s._v("brew install dart")]),s._v(" "),n("h2",{attrs:{id:"dart-的命名规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dart-的命名规则"}},[s._v("#")]),s._v(" Dart 的命名规则")]),s._v(" "),n("p",[s._v("1.变量名称必须由数字、字母、下划线和美元符($)组成。")]),s._v(" "),n("p",[s._v("2.注意：标识符开头不能是数字")]),s._v(" "),n("p",[s._v("3.标识符不能是保留字和关键字。")]),s._v(" "),n("p",[s._v("4.变量的名字是区分大小写的如: age 和 Age 是不同的变量。在实际的运用中,也建议,不要用一个单词大小写区分两个变量。")]),s._v(" "),n("p",[s._v("5.标识符(变量名称)一定要见名思意 ：变量名称建议用名词，方法名称建议用动词")]),s._v(" "),n("h2",{attrs:{id:"dart-变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dart-变量"}},[s._v("#")]),s._v(" Dart 变量")]),s._v(" "),n("p",[s._v("dart 是一个强大的脚本类语言，可以不预先定义变量类型 ，自动会类型推倒")]),s._v(" "),n("p",[s._v("dart 中定义变量可以通过 var 关键字可以通过类型来申明变量")]),s._v(" "),n("p",[s._v("dart 内置类型校验")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    var str='this is var';\n\n    String str='this is var';\n\n    int str=123;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("注意： var 后就不要写类型 ， 写了类型 不要 var 两者都写 var a int = 5; 报错")]),s._v(" "),n("h2",{attrs:{id:"string-字符串"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#string-字符串"}},[s._v("#")]),s._v(" String(字符串)")]),s._v(" "),n("h3",{attrs:{id:"定义几种方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#定义几种方式"}},[s._v("#")]),s._v(" 定义几种方式")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" var str1='string';\n String str2='string';\n\n var str3 ='''fdssfsdf\n sfsfsdf'''; //三个单引号和双引号可以换行\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"字符拼接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字符拼接"}},[s._v("#")]),s._v(" 字符拼接")]),s._v(" "),n("p",[s._v("变量可以直接使用$str 运算符可以使用${str1*2}")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('  int a = 2;\n  print("$str1 $str2");\n  print(str1+str2);\n  print("${a*2}");\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"属性介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#属性介绍"}},[s._v("#")]),s._v(" 属性介绍")]),s._v(" "),n("ul",[n("li",[s._v("根据索引获得字符")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const str = '123456';\nprint(str[1]); //2\nstr.length // 6\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("isEmpty 字符串是否是空的")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const str = '123456';\nprint(str.isEmpty);//false\nprint(''.isEmpty); // true\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("isNotEmpty 字符串是否不是空的")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const str = '123456';\nprint(str.isNotEmpty); //true\nprint(''.isNotEmpty);  // false\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("runes 字符串 Unicode 代码的可迭代对象")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const str = '123456';\nprint(str.runes); //(49, 50, 51, 52, 53, 54)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("codeUnits 字符串的 UTF-16 代码单元列表")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const str = '123456';\nprint(str.codeUnits); //[49, 50, 51, 52, 53, 54]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("hashCode 根据代码单元生成的哈希码")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const str = '123456';\nprint(str.hashCode); // 788018113\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("runtimeType 对象运行时的类型")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const str = '123456';\nprint(str.runtimeType);  // String\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"方法介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法介绍"}},[s._v("#")]),s._v(" 方法介绍")]),s._v(" "),n("ul",[n("li",[s._v("字符串比较")])]),s._v(" "),n("p",[s._v("相同返回 0 不同返回-1")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const str = 'abc';\nprint(str.compareTo('abc')); //0 相同\nprint(str.compareTo('abcd'));// -1 不同\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("大小写转换")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const str = 'abc';\nconst str1 ='ABC';\nprint(str.toUpperCase()); //大写 abc>ABC\nprint(str1.toLowerCase()); //小写 ABC>abc\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("ul",[n("li",[s._v("截取字符串(开头索引和结尾索引)")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("String str = 'abcdef';\nprint(str.substring(0, 3)); // abc 从下标0开始到下标3结束截取不包括下标3\n\n// 只有开头索引, 默认截取到最后\nprint(str.substring(2)); // cdef\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("ul",[n("li",[s._v("拆分字符串")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("String str = 'ab,cd,ef';\nprint(str.split(',')); //[ab, cd, ef]\nprint(str.split(new RegExp(r\"c\"))); //[ab,, d,ef]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("去\\t\\t tab 空格和换行符")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("String str = '\\t\\tab  ce\\n';\nprint(str.trim()); //ab ce\n//去掉字符串开头的tab空格和换行符\n\nstr.trimLeft()\n\n// 去掉字符串结尾的tab空格和换行符\nstr.trimRight()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h2",{attrs:{id:"number-int-和-double"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#number-int-和-double"}},[s._v("#")]),s._v(" Number int 和 double")]),s._v(" "),n("p",[s._v("int 必须是整型 不支持小数")]),s._v(" "),n("p",[s._v("double 既可以是整型 也可是浮点型")]),s._v(" "),n("h3",{attrs:{id:"int-常用的判断属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#int-常用的判断属性"}},[s._v("#")]),s._v(" int 常用的判断属性")]),s._v(" "),n("ul",[n("li",[s._v("是否为负数")])]),s._v(" "),n("p",[s._v("大于 0 即为 false")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("int num = 12;\nprint(num.isNegative);//false\nprint(0.isNegative);//false\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("是否是有限的")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("int num = 12;\nprint(num.isFinite); //true\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("是否是无穷大或者无穷小")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("int num = 12;\nprint(num.isInfinite); //false\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("是否为偶数")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("int num = 12;\nprint(num.isEven); //true\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("是否为奇数")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("int num = 12;\nprint(num.isOdd); //false\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("是否是 NaN 值")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("int num = 12;\nprint(num.isNaN); //false\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"int-数字类型中常用的函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#int-数字类型中常用的函数"}},[s._v("#")]),s._v(" int 数字类型中常用的函数")]),s._v(" "),n("ul",[n("li",[s._v("获取绝对值")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("int num = -12;\nprint(num.abs()); //12\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("转成字符串")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("int num = -12;\nprint(num.toString()); //-12\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("幂次求模")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// num的4次幂, 在对num的四次幂求模\nint num = 2;\nprint(num.modPow(4, 2)); //0\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("比较大小")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 比较大小, 0:相同、1:大于、-1:小于\nint num = 2;\nprint(num.compareTo(30)); // -1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("转成 double")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("int num = 2;\nprint(num.toDouble());//2.0\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("返回余数")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// num/5的余数\nint num = 10;\nprint(num.remainder(5)); //0\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("最大公约数")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// num和16的最大公约数\nint num = 10;\nprint(num.gcd(16)); //2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"double-类型属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#double-类型属性"}},[s._v("#")]),s._v(" double 类型属性")]),s._v(" "),n("ul",[n("li",[s._v("是否是 NaN 值")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("double num = 12.23;\nprint(num.isNaN); //false\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("根据代码单元生成的哈希码")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("double num = 12.23;\nprint(num.hashCode); //11388478633041204\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"double-类型相关方法的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#double-类型相关方法的使用"}},[s._v("#")]),s._v(" double 类型相关方法的使用")]),s._v(" "),n("ul",[n("li",[s._v("四舍五入")])]),s._v(" "),n("p",[s._v("round() 取整")]),s._v(" "),n("p",[s._v("ceil() 向上取整")]),s._v(" "),n("p",[s._v("floor() 向下取整")]),s._v(" "),n("p",[s._v("toStringAsFixed(2) 保留指定的小数位数(四舍五入), 不足补 0, 字符串返回")]),s._v(" "),n("p",[s._v("toStringAsPrecision(10) 保留变量的位数(小数点前后的总位数), 不足补 0, 多余的四舍五入")]),s._v(" "),n("blockquote",[n("p",[s._v("类型转换")])]),s._v(" "),n("ul",[n("li",[s._v("int -> double")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" double b = a.toDouble();\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("double ->int")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" int d = c.toInt();\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("String -> int")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" int one = int.parse('1'); // 1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("String -> double")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" double onePointOne = double.parse('1.1'); // 1.1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("String -> double")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" double onePointOne = double.parse('1.1'); // 1.1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("int -> String")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  String oneAsString = 1.toString(); //'1'\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("double -> String")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" String piAsString = 3.14159.toStringAsFixed(2); //3.14\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h2",{attrs:{id:"常量-final-和-const-修饰符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常量-final-和-const-修饰符"}},[s._v("#")]),s._v(" 常量 final 和 const 修饰符")]),s._v(" "),n("p",[s._v("const 值不变 一开始就得赋值")]),s._v(" "),n("p",[s._v("final 可以开始不赋值只能赋一次 ; 而 final 不仅有 const 的编译时常量的特性，\n最重要的它是运行时常量，并且 final 是惰性初始化，即在运行时第一次使用前才初始化")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" const PI=3.14159;\n PI=123.1243; //错误的写法 常量不可以修改\n print(PI);\n final PI=3.14159;\n PI=124214.214124;   //错误写法\n print(PI);\n\n\n const str3=new DateTime.now(); 报错\n final str3=new DateTime.now();\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("区别：final 可以开始不赋值 只能赋一次 ; 而 final 不仅有 const 的编译时常量的特性，\n最重要的它是运行时常量，并且 final 是惰性初始化，即在运行时第一次使用前才初始化")]),s._v(" "),n("h2",{attrs:{id:"bool-类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bool-类型"}},[s._v("#")]),s._v(" bool 类型")]),s._v(" "),n("p",[s._v("Dart 使用 bool 类型表示布尔值。 Dart 只有字面量 true and false 是布尔类型， 这两个对象都是编译时常量")]),s._v(" "),n("h2",{attrs:{id:"list-数组-集合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#list-数组-集合"}},[s._v("#")]),s._v(" List 数组/集合")]),s._v(" "),n("blockquote",[n("p",[s._v("List 定义方式")])]),s._v(" "),n("p",[s._v("设置了参数 length(length 不能为负数或 null)，创建的 List 是固定长度的\n元素可修改, 元素个数不可修改, 不能删除和增加元素")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var l1 = new List(3);  //[null, null, null]\nprint(l1.length);  //3\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("未设置参数 length，那么 List 的长度是 0，并且是可增长的")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 这两种方式一样\nvar l10 = new List();\nvar l11 = [];\n\nl10.length = 3;\nl10.add(1);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("使用指定长度创建一个可增长的 List 时，仅仅在刚创建后分配长度")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("List growableList = new List()..length = 500;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("blockquote",[n("p",[s._v("3、定义 List 指定类型")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  var l3 = new List<String>();\n\n  l3.add('张三');\n\n  l3.add('123');\n\n  print(l3);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("blockquote",[n("p",[s._v("方法")])]),s._v(" "),n("ul",[n("li",[s._v("添加元素")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("arr1.add(5);\n// 添加一个数组\narr1.addAll([10, 12]);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("blockquote",[n("p",[s._v("查找")])]),s._v(" "),n("ul",[n("li",[s._v("是否包含某元素")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("List arr2 = ['1', '2', '3', '4', '5'];\nprint(arr2.contains('1'));  // true\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("判断数组是否有满足条件的元素")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("List arr2 = ['one', 'two', 'three', 'one', 'four'];\nprint(arr2.any((item) => item.length > 4));  // true\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("判断数组是否所有元素都满足条件")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("List arr2 = ['one', 'two'];\nprint(arr2.every((item) => item.length ==3));  // true\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("List 转化为 Map 类型")])]),s._v(" "),n("p",[s._v("索引作为 Key 值，对应的元素作为 Value")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("List arr2 = ['one', 'two'];\nprint(arr2.asMap());  // {0: one, 1: two}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("随机打乱 List 中的元素")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("List arr2 = ['one', 'two', 'three', 'one', 'four'];\narr2.shuffle();\nprint(arr2);   // [three, one, two, four, one]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("获取元素对应的索引值, 默认从索引 0 开始")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("List arr2 = ['one', 'two', 'three', 'one', 'four'];\nprint(arr2.indexOf('one'));  // 0\n\n// 从第2个索引开始查找\n\nprint(arr2.indexOf('one', 2));  // 3\n\n\n// 如果找不到, 返回-1\n\nprint(arr2.indexOf('five'));  // -1\n\n// 获取元素对应的索引值, 从后往前找\n\nprint(arr2.lastIndexOf('one'));\nprint(arr2.lastIndexOf('one', 3));\nprint(arr2.lastIndexOf('five'));\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("ul",[n("li",[s._v("返回满足条件的第一个元素")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("List arr2 = ['one', 'two', 'three', 'one', 'four'];\n\nprint(arr2.firstWhere((item) => item == 'one'));\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("截取新的 List")])]),s._v(" "),n("p",[s._v("包含从 start（包括）到 end（不包括）的对象, 原数组不变")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("List arr2 = ['one', 'two', 'three', 'one', 'four'];\nprint(arr2.sublist(1, 3)); // [two, three]\n// 不指定end, 默认到数组结尾\nprint(arr2.sublist(2)); // [three, one, four]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("ul",[n("li",[s._v("数组拼接成字符串")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("List arr2 = ['one', 'two', 'three', 'one', 'four'];\nprint(arr2.join());      //onetwothreefour\nprint(arr2.join('-'));   //one-two-three-four\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("截取 count 之后的元素")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("arr2 = ['one', 'two', 'three', 'four'];\nprint(arr2.skip(2)); // (three, four)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("截取最初的 count 元素")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("List arr2 = ['one', 'two', 'three', 'one', 'four'];\nprint(arr2.take(2)); // (one, two)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("返回所有不符合该条件的元素")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("arr2 = ['one', 'two', 'three', 'four'];\nprint(arr2.skipWhile((item) => item.length == 3));  //(three, four)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("获取某一区间的元素, 返回一个数组")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("arr2 = ['one', 'two', 'three', 'four'];\nprint(arr2.getRange(1, 3));    // ['two', 'three']\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"删除"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[s._v("#")]),s._v(" 删除")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var arr2 = ['one', 'two', 'three', 'one', 'four'];\n\n// 删除指定的元素\n// 如果有该元素, 返回true\nprint(arr2.remove('two'));  // true\nprint(arr2);   // [one, three, one, four]\n// 如果没有该元素, 返回false\nprint(arr2.remove('five'));  // false\n\n// 根据索引删除, 返回被删除的元素值\nprint(arr2.removeAt(1));  // three\nprint(arr2);   // [one, one, four]\n\n// 删除最后一个元素, 返回该元素值\nprint(arr2.removeLast());  // four\nprint(arr2); // [one, one]\n\n// 删除一个区间的元素, 含左不含右[start, end)\narr2.addAll(['six', 'seven', 'eight']);\narr2.removeRange(1, 3);\nprint(arr2);  // [one, seven, eight]\n\n// 删除所有符合条件的元素\narr2.removeWhere((item) => item.length == 3);\nprint(arr2);  // [seven, eight]\n\n//删除List中所有不满足条件的元素\narr2.retainWhere((item) => item.length > 3);\nprint(arr2);\n\n// 删除所有的元素\narr1.clear();\nprint(arr1);  // []\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br")])]),n("blockquote",[n("p",[s._v("插入")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var arr3 = [1, 3, 4];\n// 在某处插入元素\narr3.insert(1, 10);\nprint(arr3); //[1, 10, 3, 4]\n\n// 插入一个数组\narr3.insertAll(2, [12, 32]);\nprint(arr3);\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);